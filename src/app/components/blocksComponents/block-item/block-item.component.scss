@use "../../../../assets/sass/core/mixins" as *;

.block-container {
  background-color: var(--background-color-lighter);
  border-radius: var(--radius-mobile);
  overflow: hidden;
  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.1);
  transition: transform 0.2s, box-shadow 0.2s;
  position: relative;
  width: 100%;
  
  @include respond-to('xs') {
    border-radius: var(--radius-small);
  }

  &:hover {
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
  }

  &.cdk-drag-preview {
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
    opacity: 0.9;
  }

  &.cdk-drag-placeholder {
    opacity: 0;
  }

  &.cdk-drag-animating {
    transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);
  }
  ::ng-deep .p-inputtext{
    background-color: var(--background-color);
  }
  ::ng-deep .p-textarea {
    background-color: var(--background-color);
  }
  ::ng-deep .p-select {
    background-color: var(--background-color);
  }
}

.block-header {
  @include flex-responsive(row, nowrap);
  justify-content: space-between;
  align-items: center;
  @include spacing-responsive(padding, 8px 12px);
  border-bottom: 1px solid var(--neutral-color);
  height: 50px;
  flex-shrink: 0;
  
  @include respond-to('mobile') {
    height: 45px;
    padding: 6px 10px;
  }
  
  @include respond-to('xs') {
    height: 40px;
    padding: 5px 8px;
  }

  .texte {
    @include flex-responsive(row, nowrap, var(--gap));
    align-items: center;
    justify-content: center;
    
    @include respond-to('mobile') {
      gap: var(--gap-mobile);
    }

    i {
      @include font-responsive(var(--font-size-base));
    }
  }
}

.block-controls-left {
  cursor: grab;
  padding: 0 5px;

  &:active {
    cursor: grabbing;
  }

  i {
    font-size: 0.9rem;
  }
}

.block-controls {
  cursor: pointer;
  @include flex-responsive(row, nowrap, calc(var(--gap) / 2));
  
  @include respond-to('mobile') {
    gap: calc(var(--gap-mobile) / 2);
  }
}

.block-preview {
  background-color: white;
  border-radius: var(--radius-mobile);
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
  min-width: 200px;
  min-height: 80px;
  @include flex-responsive(column, nowrap);
  align-items: center;
  justify-content: center;
  
  @include respond-to('mobile') {
    min-width: 150px;
    min-height: 60px;
    border-radius: var(--radius-small);
  }

  .block-preview-content {
    padding: 10px 15px;
    font-weight: 500;
    color: var(--primary-color);
  }
}

.block-placeholder {
  background-color: rgba(59, 130, 246, 0.15);
  border: 2px dashed rgba(59, 130, 246, 0.4);
  border-radius: var(--radius-mobile);
  min-height: 180px !important;
  @include spacing-responsive(margin, 15px 0);
  animation: pulse-blue 1.5s infinite;
  @include flex-responsive(column, nowrap);
  align-items: center;
  justify-content: center;
  
  @include respond-to('mobile') {
    min-height: 140px !important;
  }
  
  @include respond-to('xs') {
    min-height: 120px !important;
    border-radius: var(--radius-small);
  }

  .placeholder-content {
    color: rgba(59, 130, 246, 0.6);
    font-weight: 500;
  }
}

@keyframes pulse-blue {
  0% {
    background-color: rgba(59, 130, 246, 0.1);
  }

  50% {
    background-color: rgba(59, 130, 246, 0.2);
  }

  100% {
    background-color: rgba(59, 130, 246, 0.1);
  }
}


.readonly-block {
  box-shadow: none;
  border: none;
  @include spacing-responsive(margin-bottom, 1.5rem);
  
  .block-header {
    background-color: var(--primary-color-transparent-50);
    border-radius: var(--radius-mobile) var(--radius-mobile) 0 0;
    
    @include respond-to('xs') {
      border-radius: var(--radius-small) var(--radius-small) 0 0;
    }
    
    .texte {
      font-weight: 600;
    }
  }
}