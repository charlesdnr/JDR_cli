@use "../../assets/sass/core/mixins" as *;

:host {
  @include flex-responsive(column, nowrap);
  justify-content: flex-start;
  align-items: center;
  width: 100%;
  min-height: 100vh;
  @include spacing-responsive(padding, 2rem);
  overflow-y: auto;
  overflow-x: hidden;

  ::ng-deep {
    .p-inputtext {
      // background-color: var(--font-color);
      // color: var(--background-color);
      // box-shadow: var(--background-color);
      height: 40px;
    }
}
::ng-deep .p-inputtext{
  background-color: var(--background-color);
}
}

.container-account {
  @include container-responsive;
  width: 100%;
  max-width: 1200px;
}

.container-square {
  @include flex-responsive(row, nowrap, 2rem);
  width: 100%;
  
  @include respond-to('tablet') {
    flex-direction: column;
    gap: 1.5rem;
  }
}

.card {
  background-color: var(--background-color-lighter);
  border-radius: var(--radius);
  @include spacing-responsive(padding, 1.5rem);
  box-shadow: var(--box-shadow);
  overflow: hidden;
  position: relative;
  
  @include respond-to('mobile') {
    padding: var(--padding-mobile);
    border-radius: var(--radius-mobile);
  }
}

.left {
  @include flex-responsive(column, nowrap);
  flex: 3;
  padding: 0;
  align-items: center;
  background-color: var(--background-color-lighter);
  border-radius: var(--radius);
  
  @include respond-to('tablet') {
    flex: 1;
  }
  
  @include respond-to('mobile') {
    border-radius: var(--radius-mobile);
  }

  .upsquare {
    height: 100px;
    width: 100%;
    background-color: var(--primary-color);
    border-top-left-radius: var(--radius);
    border-top-right-radius: var(--radius);
    
    @include respond-to('mobile') {
      height: 80px;
      border-top-left-radius: var(--radius-mobile);
      border-top-right-radius: var(--radius-mobile);
    }
  }

  .picture-container {
      margin-top: -75px;
      position: relative;
      z-index: 2;
      width: 150px;
      height: 150px;
      border-radius: 50%;
      border: 4px solid var(--background-color-lighter);
      background-color: var(--surface-200);
      overflow: hidden;
      
      @include respond-to('mobile') {
        width: 120px;
        height: 120px;
        margin-top: -60px;
      }

      .profile-picture {
          width: 100%;
          height: 100%;
          object-fit: cover;
      }
  }

  .downsquare {
    flex-grow: 1;
    width: 100%;
    background-color: var(--background-color-lighter);
    border-bottom-left-radius: var(--radius);
    border-bottom-right-radius: var(--radius);
    @include flex-responsive(column, nowrap);
    align-items: center;
    @include spacing-responsive(padding, 1.5rem);
    padding-top: 85px;
    
    @include respond-to('mobile') {
      padding-top: 70px;
      border-bottom-left-radius: var(--radius-mobile);
      border-bottom-right-radius: var(--radius-mobile);
    }

    h2 {
        margin-top: 0;
        margin-bottom: 0.5rem;
    }

    .subtitle {
        @include font-responsive(var(--font-size-sm));
        color: var(--font-secondary-color);
        @include spacing-responsive(margin-bottom, 1.5rem);
        text-align: center;
    }

    .button-group {
        @include flex-responsive(column, nowrap, 0.75rem);
        width: 100%;
        max-width: 250px;

        ::ng-deep .p-button {
           @include button-responsive;
           width: 100%;
        }
    }
  }
}

.right {
  flex: 7;
  @include flex-responsive(column, nowrap, 1.5rem);
  
  @include respond-to('tablet') {
    flex: 1;
  }

  .info-form {
    @include flex-responsive(column, nowrap, 1.5rem);
    justify-content: space-between;
    min-height: 100%;
  }

  .form-grid {
    @include grid-responsive(2, 1rem 1.5rem);
    
    @include respond-to('mobile') {
      grid-template-columns: 1fr;
      gap: 1rem;
    }

    .form-field {
      @include flex-responsive(column, nowrap, 0.5rem);
    }
  }

  .action-buttons {
    @include flex-responsive(row, wrap, 1rem);
    justify-content: space-between;
    align-items: center;
    @include spacing-responsive(margin-top, 1rem);
    
    @include respond-to('mobile') {
      flex-direction: column;
      align-items: stretch;
      
      ::ng-deep .p-button {
        width: 100%;
        margin-bottom: 0.5rem;
      }
    }
    
    .first {
      @include flex-responsive(row, wrap, var(--gap));
      
      ::ng-deep .p-button {
        min-width: 140px;
      }
    }
    
    // Fix pour le bouton supprimer - pas trop grand et correct spacing
    ::ng-deep .p-button.p-button-danger {
      max-width: 200px;
      min-width: 160px;
      
      @include respond-to('mobile') {
        max-width: 100%;
      }
    }
  }
}




.password-field {
  ::ng-deep .p-button-text.p-button-secondary {
    color: var(--font-color);
  }
  ::ng-deep .p-button-text.p-button-secondary:not(:disabled):hover {
    background-color: transparent;
  }
}
.dialog-footer {
  @include flex-responsive(row, nowrap, 0.5rem);
  justify-content: flex-end;
  width: 100%;
  
  @include respond-to('mobile') {
    flex-direction: column;
    
    ::ng-deep .p-button {
      width: 100%;
    }
  }
}

// Fix pour le scroll complet de la page
.reset-password-content {
  @include flex-responsive(column, nowrap, 1rem);
  
  .reset-description {
    @include font-responsive(var(--font-size-sm));
    color: var(--font-secondary-color);
    margin-bottom: 1rem;
  }
  
  .container-label {
    @include flex-responsive(column, nowrap, 0.5rem);
  }
}
